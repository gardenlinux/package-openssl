From 6b6e5163a9300b5f32cd0bc98807e65b3acd4ae3 Mon Sep 17 00:00:00 2001
From: Tomas Mraz <tomas@openssl.org>
Date: Thu, 18 Jul 2024 11:01:00 +0200
Subject: [PATCH 086/125] Avoid leaking *ba_ret on reconnections

Also fixes Coverity 1604639
There is no point in checking ba_ret as it can never be NULL.

Reviewed-by: Tom Cosgrove <tom.cosgrove@arm.com>
Reviewed-by: Paul Dale <ppzgs1@gmail.com>
(Merged from https://github.com/openssl/openssl/pull/24931)

(cherry picked from commit 4fa9d1f40fc85d8c70c93168dc812217db349359)
---
 apps/lib/s_socket.c | 3 ---
 apps/s_client.c     | 3 +++
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/apps/lib/s_socket.c b/apps/lib/s_socket.c
index ace51686ad..e4068fad3f 100644
--- a/apps/lib/s_socket.c
+++ b/apps/lib/s_socket.c
@@ -90,9 +90,6 @@ int init_client(int *sock, const char *host, const char *port,
     int ret;
     int options = 0;
 
-    if (tfo && ba_ret != NULL)
-        *ba_ret = NULL;
-
     if (BIO_sock_init() != 1)
         return 0;
 
diff --git a/apps/s_client.c b/apps/s_client.c
index 78a44755cb..6a124e0a19 100644
--- a/apps/s_client.c
+++ b/apps/s_client.c
@@ -2167,6 +2167,9 @@ int s_client_main(int argc, char **argv)
     if (tfo)
         BIO_printf(bio_c_out, "Connecting via TFO\n");
  re_start:
+    /* peer_addr might be set from previous connections */
+    BIO_ADDR_free(peer_addr);
+    peer_addr = NULL;
     if (init_client(&sock, host, port, bindhost, bindport, socket_family,
                     socket_type, protocol, tfo, !isquic, &peer_addr) == 0) {
         BIO_printf(bio_err, "connect:errno=%d\n", get_last_socket_error());
-- 
2.39.5 (Apple Git-154)

